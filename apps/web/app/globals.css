@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 262.1 83.3% 57.8%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 262.1 83.3% 57.8%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 224 71.4% 4.1%;
    --foreground: 210 20% 98%;
    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;
    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;
    --primary: 263.4 70% 50.4%;
    --primary-foreground: 210 20% 98%;
    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;
    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;
    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;
    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 263.4 70% 50.4%;
  }
}

@layer base {
  * {
    @apply border-gray-200 dark:border-gray-800;
  }
  
  body {
    @apply bg-gray-950 text-white;
  }
  
  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }
  
  ::-webkit-scrollbar-track {
    @apply bg-gray-800/20 rounded-full;
  }
  
  ::-webkit-scrollbar-thumb {
    @apply bg-purple-500/50 rounded-full transition-colors;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    @apply bg-purple-500/70;
  }
}

@layer utilities {
  /* Animations */
  @keyframes blob {
    0% {
      transform: translate(0px, 0px) scale(1);
    }
    33% {
      transform: translate(30px, -50px) scale(1.1);
    }
    66% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    100% {
      transform: translate(0px, 0px) scale(1);
    }
  }
  
  .animate-blob {
    animation: blob 7s infinite;
  }
  
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  
  .animation-delay-4000 {
    animation-delay: 4s;
  }
  
  .animation-delay-1000 {
    animation-delay: 1s;
  }
  
  .animation-delay-3000 {
    animation-delay: 3s;
  }
  
  .animation-delay-5000 {
    animation-delay: 5s;
  }
  
  /* Glassmorphism */
  .glass {
    @apply backdrop-blur-md bg-white/5 border border-white/10;
  }
  
  .glass-hover {
    @apply hover:bg-white/10 transition-colors;
  }
  
  /* Glow effects */
  .glow {
    @apply relative;
  }
  
  .glow::before {
    content: '';
    @apply absolute inset-0 opacity-0 blur-xl transition-opacity -z-10;
    border-radius: inherit;
    background: linear-gradient(to right, rgb(147 51 234), rgb(168 85 247));
  }
  
  .glow:hover::before {
    @apply opacity-50;
  }
  
  /* Text gradients */
  .text-gradient {
    @apply bg-clip-text text-transparent;
    background-image: linear-gradient(to right, rgb(147 51 234), rgb(168 85 247));
  }
  
  /* Shimmer effect */
  @keyframes shimmer {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }
  
  .shimmer {
    @apply relative overflow-hidden;
  }
  
  .shimmer::after {
    content: '';
    @apply absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/10 to-transparent;
    animation: shimmer 2s infinite;
  }
  
  /* Neon text */
  .neon {
    @apply relative;
    text-shadow: 
      0 0 10px currentColor,
      0 0 20px currentColor,
      0 0 40px currentColor;
  }
  
  /* Perspective card */
  .perspective-1000 {
    perspective: 1000px;
  }
  
  .transform-gpu {
    transform: translateZ(0);
  }
  
  /* Loading states */
  .skeleton {
    @apply relative overflow-hidden bg-gray-800;
  }
  
  .skeleton::after {
    content: '';
    @apply absolute inset-0 -translate-x-full bg-gradient-to-r from-transparent via-white/10 to-transparent;
    animation: shimmer 2s infinite;
  }
  
  /* Grid pattern background */
  .bg-grid-pattern {
    background-image: 
      linear-gradient(to right, rgba(255, 255, 255, 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
    background-size: 30px 30px;
  }
  
  /* Pulse animation for live indicators */
  @keyframes pulse-ring {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
    }
    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
    }
    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
  }
  
  .pulse-ring {
    animation: pulse-ring 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  /* Gradient border animation */
  @keyframes gradient-border {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  .gradient-border {
    position: relative;
    background: linear-gradient(60deg, #f79533, #f37055, #ef4e7b, #a166ab, #5073b8, #1098ad, #07b39b, #6fba82);
    background-size: 300% 300%;
    animation: gradient-border 3s ease alternate infinite;
  }
  
  /* Monitoring specific animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }
  
  .float-animation {
    animation: float 6s ease-in-out infinite;
  }
  
  /* Heatmap cell hover effect */
  .heatmap-cell {
    transition: all 0.2s ease;
  }
  
  .heatmap-cell:hover {
    transform: scale(1.2);
    z-index: 10;
  }
  
  /* Chart glow effects */
  .chart-glow {
    filter: drop-shadow(0 0 20px rgba(139, 92, 246, 0.5));
  }
  
  /* Monitoring card hover effects */
  .monitoring-card {
    transition: all 0.3s ease;
    transform-style: preserve-3d;
  }
  
  .monitoring-card:hover {
    transform: translateY(-5px) rotateX(5deg);
  }
  
  /* Alert breathing animation */
  @keyframes breathe {
    0%, 100% {
      opacity: 0.6;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.05);
    }
  }
  
  .alert-breathe {
    animation: breathe 2s ease-in-out infinite;
  }
  
  /* Metric value change animation */
  @keyframes value-change {
    0% {
      transform: scale(1);
      color: inherit;
    }
    50% {
      transform: scale(1.1);
      color: rgb(59, 130, 246);
    }
    100% {
      transform: scale(1);
      color: inherit;
    }
  }
  
  .value-change {
    animation: value-change 0.3s ease;
  }
}